##########################################################################################################################
# File automatically-generated by STM32forVSCode
##########################################################################################################################

# ------------------------------------------------
# Generic Makefile (based on gcc)
#
# ChangeLog :
#	2017-02-10 - Several enhancements + project update mode
#   2015-07-22 - first version
# ------------------------------------------------

######################################
# target
######################################
TARGET = PolyRender


######################################
# building variables
######################################
# debug build?
DEBUG = 0
# optimization
OPT = -Ofast


#######################################
# paths
#######################################
# Build path
BUILD_DIR = PolyRender/build

######################################
# source
######################################
# C sources
C_SOURCES =  \
PolyRender/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c \
PolyRender/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c \
PolyRender/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc_ex.c \
PolyRender/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c \
PolyRender/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c \
PolyRender/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_gpio.c \
PolyRender/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c \
PolyRender/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma.c \
PolyRender/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma_ex.c \
PolyRender/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c \
PolyRender/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_pwr.c \
PolyRender/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_pwr_ex.c \
PolyRender/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c \
PolyRender/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c \
PolyRender/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c_ex.c \
PolyRender/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_exti.c \
PolyRender/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rng.c \
PolyRender/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rng_ex.c \
PolyRender/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sai.c \
PolyRender/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sai_ex.c \
PolyRender/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c \
PolyRender/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi_ex.c \
PolyRender/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_tim.c \
PolyRender/Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_tim_ex.c \

C_SOURCES += $(wildcard PolyRender/Core/**/*.c)
C_SOURCES += $(wildcard PolyLib/**/*.c)
C_SOURCES += $(wildcard PolyLib/**/**/*.c)

CPP_SOURCES =  $(wildcard PolyRender/**/**/*.cpp) $(wildcard PolyRender/**/*.cpp) $(wildcard PolyRender/**/**/**/*.cpp)
CPP_SOURCES +=  $(wildcard PolyLib/**/**/*.cpp) $(wildcard PolyLib/**/*.cpp) $(wildcard PolyLib/**/**/**/*.cpp) $(wildcard PolyLib/*.cpp)



# ASM sources
ASM_SOURCES =  \
PolyRender/startup_stm32h743xx.s



#######################################
# binaries
#######################################
PREFIX = arm-none-eabi-
# The gcc compiler bin path can be either defined in make command via GCC_PATH variable (> make GCC_PATH=xxx)
# either it can be added to the PATH environment variable.

ifdef GCC_PATH
CXX = $(GCC_PATH)/$(PREFIX)g++
CC = $(GCC_PATH)/$(PREFIX)gcc
AS = $(GCC_PATH)/$(PREFIX)gcc -x assembler-with-cpp
CP = $(GCC_PATH)/$(PREFIX)objcopy
SZ = $(GCC_PATH)/$(PREFIX)size
else
CXX = $(PREFIX)g++
CC = $(PREFIX)gcc
AS = $(PREFIX)gcc -x assembler-with-cpp
CP = $(PREFIX)objcopy
SZ = $(PREFIX)size
endif
HEX = $(CP) -O ihex

#######################################
# CFLAGS
#######################################
# cpu
CPU = -mcpu=cortex-m7

# fpu
FPU = -mfpu=fpv5-d16

# float-abi
FLOAT-ABI = -mfloat-abi=hard

# mcu
MCU = $(CPU) -mthumb $(FPU) $(FLOAT-ABI)

# macros for gcc
# AS defines
AS_DEFS = 

# C defines
C_DEFS =  \
-DSTM32H743xx \
-DUSE_HAL_DRIVER \
-DPOLYRENDER


# AS includes
AS_INCLUDES = \

# C includes
C_INCLUDES =  \
-IPolyRender/Core/Inc \
-IPolyRender/Drivers/CMSIS/Device/ST/STM32H7xx/Include \
-IPolyRender/Drivers/CMSIS/Include \
-IPolyRender/Drivers/STM32H7xx_HAL_Driver/Inc \
-IPolyRender/Drivers/STM32H7xx_HAL_Driver/Inc/Legacy \
-IPolyRender/Drivers/CMSIS/DSP/Include \
-IPolyLib



# compile gcc flags
ASFLAGS = $(MCU) $(AS_DEFS) $(AS_INCLUDES) $(OPT) -Wall -fdata-sections -ffunction-sections -Wno-volatile 

CFLAGS = $(MCU) $(C_DEFS) $(C_INCLUDES) $(OPT) -Wall -fdata-sections -ffunction-sections 

ifeq ($(DEBUG), 1)
CFLAGS += -g -gdwarf-2
endif


# Generate dependency information
CFLAGS += -MMD -MP -MF"$(@:%.o=%.d)"

CXXFLAGS?=
CXXFLAGS += -feliminate-unused-debug-types -std=c++2a -Wno-volatile

#######################################
# LDFLAGS
#######################################
# link script
LDSCRIPT = PolyRender/PolyRenderMemoryLayout.ld

# libraries
LIBS = -lc -lm -lnosys -lstdc++
LIBDIR = -LPolyRender/Drivers/CMSIS/Lib/GCC -larm_cortexM7lfdp_math
# LIBDIR = 


LDFLAGS = $(MCU) -specs=nosys.specs -T$(LDSCRIPT) $(LIBDIR) $(LIBS) -Wl,-Map=$(BUILD_DIR)/$(TARGET).map,--cref -Wl,--gc-sections,--print-memory-usage

# default action: build all
all: $(BUILD_DIR)/$(TARGET).elf $(BUILD_DIR)/$(TARGET).hex 


#######################################
# build the application
#######################################
# list of cpp program objects
OBJECTS = $(addprefix $(BUILD_DIR)/,$(notdir $(CPP_SOURCES:.cpp=.o)))
vpath %.cpp $(sort $(dir $(CPP_SOURCES)))
# list of C objects
OBJECTS += $(addprefix $(BUILD_DIR)/,$(notdir $(C_SOURCES:.c=.o)))
vpath %.c $(sort $(dir $(C_SOURCES)))
# list of ASM program objects
OBJECTS += $(addprefix $(BUILD_DIR)/,$(notdir $(ASM_SOURCES:.s=.o)))
vpath %.s $(sort $(dir $(ASM_SOURCES)))

$(BUILD_DIR)/%.o: %.cpp PolyRender/Makefile | $(BUILD_DIR) 
	$(CXX) -c $(CXXFLAGS) $(CFLAGS) -Wa,-a,-ad,-alms=$(BUILD_DIR)/$(notdir $(<:.cpp=.lst)) $< -o $@

$(BUILD_DIR)/%.o: %.c PolyRender/Makefile | $(BUILD_DIR) 
	$(CC) -c $(CFLAGS) -Wa,-a,-ad,-alms=$(BUILD_DIR)/$(notdir $(<:.c=.lst)) $< -o $@

$(BUILD_DIR)/%.o: %.s PolyRender/Makefile | $(BUILD_DIR)
	$(AS) -c $(CFLAGS) $< -o $@

$(BUILD_DIR)/$(TARGET).elf: $(OBJECTS) PolyRender/Makefile
	$(CXX) $(OBJECTS) $(LDFLAGS) -o $@
	$(SZ) $@

$(BUILD_DIR)/%.hex: $(BUILD_DIR)/%.elf | $(BUILD_DIR)
	$(HEX) $< $@

$(BUILD_DIR):
	mkdir "$@"

#######################################
# flash
#######################################
flash: $(BUILD_DIR)/$(TARGET).elf
	openocd -f interface/stlink.cfg  -f target/stm32h7x.cfg -c "program $(BUILD_DIR)/$(TARGET).elf reset exit"

#######################################
# erase
#######################################
erase: $(BUILD_DIR)/$(TARGET).elf
	openocd -f interface/stlink.cfg -f target/stm32h7x.cfg -c "init; reset halt; stm32h7x mass_erase 0; exit"

#######################################
# clean up
#######################################
clean:
	cmd /c rd /s /q "$(BUILD_DIR)"
	
#######################################
# dependencies
#######################################
-include $(wildcard $(BUILD_DIR)/*.d)

# *** EOF ***